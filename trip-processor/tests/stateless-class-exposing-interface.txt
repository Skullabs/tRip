package sample.project;

@trip.spi.Singleton( exposedAs=important.api.Interface.class )
@trip.spi.GeneratedFromStatelessService
public class InterfaceStateless1612123513
	extends sample.project.ServiceFromInterface implements important.api.Interface {

	@trip.spi.Provided trip.spi.ServiceProvider provider;

	public void voidMethod(  ) {
		try {
			final sample.project.ServiceFromInterface instance = newInstance();
			try {
				instance.voidMethod(  );
			} finally {
				preDestroyInterface1612123513( instance );
			}
		} catch ( Throwable cause ) {
			throw new RuntimeException( cause );
		}
	}

	public Long sum( Double arg0,Integer arg1 ) {
		try {
			final sample.project.ServiceFromInterface instance = newInstance();
			try {
				postConstructInterface1612123513( instance );

				final Long returnValue = instance.sum( arg0,arg1 );
				return returnValue;
			} finally {
				preDestroyInterface1612123513( instance );
			}
		} catch ( Throwable cause ) {
			throw new RuntimeException( cause );
		}
	}

	private sample.project.ServiceFromInterface newInstance() throws trip.spi.ServiceProviderException {
		final sample.project.ServiceFromInterface instance = new sample.project.ServiceFromInterface();
		provider.provideOn( instance );
		return instance;
	}

	private static void preDestroyInterface1612123513(
			final sample.project.ServiceFromInterface instance ) throws Throwable {
		instance.voidMethod();
	}

	private static void postConstructInterface1612123513(
			final sample.project.ServiceFromInterface instance ) throws Throwable {
		instance.sum();
	}
}