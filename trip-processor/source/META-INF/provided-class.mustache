package {{packageName}};

{{#name}}
@trip.spi.Name( "{{.}}" )
{{/name}}
public class {{typeName}}AutoGeneratedProvider{{providerName}} implements trip.spi.ProviderFactory<{{type}}> {

	@trip.spi.Provided trip.spi.ServiceProvider provider;

	public {{type}} provide( trip.spi.ProviderContext context ) throws trip.spi.ServiceProviderException {
		try {
		{{#serviceFor}}
			final {{provider}} factoryProvider = provider.load( {{provider}}.class );
		{{/serviceFor}}
		{{^serviceFor}}
			final {{provider}} factoryProvider = new {{provider}}();
			provider.provideOn( factoryProvider );
		{{/serviceFor}}
{{^expectsContext}}
			return factoryProvider.{{providerMethod}}();
{{/expectsContext}}
{{#expectsContext}}
			return factoryProvider.{{providerMethod}}( context );
{{/expectsContext}}
		} catch( Throwable cause ) {
			throw new trip.spi.ServiceProviderException( cause );
		}
	}
}