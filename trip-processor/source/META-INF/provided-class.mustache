package {{packageName}};

{{#annotations}}
@{{.}}
{{/annotations}}
@trip.spi.Singleton( exposedAs=trip.spi.ProducerFactory.class )
public class {{typeName}}AutoGeneratedProvider{{providerName}} implements trip.spi.ProducerFactory<{{type}}> {

	{{#serviceFor}}
	@trip.spi.Provided {{serviceFor}} factoryProvider;
	{{/serviceFor}}
	{{^serviceFor}}
	@trip.spi.Provided {{provider}} factoryProvider;
	{{/serviceFor}}

	public {{type}} provide( trip.spi.ProviderContext context ) throws trip.spi.ServiceProviderException {
		try {
{{^expectsContext}}
			return factoryProvider.{{providerMethod}}();
{{/expectsContext}}
{{#expectsContext}}
			return factoryProvider.{{providerMethod}}( context );
{{/expectsContext}}
		} catch( Throwable cause ) {
			throw new trip.spi.ServiceProviderException( cause );
		}
	}
}